@inject CustomerInfoService CustomerInfoService
@using Common.View

<EditForm Model="@newUser" OnSubmit="SaveProfile" FormName="CreateProfileForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>First Name:</label>
        <InputText @bind-Value="newUser.FirstName" class="form-control" />
    </div>
    <div>
        <label>Middle Name:</label>
        <InputText @bind-Value="newUser.MiddleName" class="form-control" />
    </div>
    <div>
        <label>Last Name:</label>
        <InputText @bind-Value="newUser.LastName" class="form-control" />
    </div>
    <div>
        <label>Address:</label>
        <InputText @bind-Value="newUser.Address" class="form-control" />
    </div>
    <div>
        <label>City:</label>
        <InputText @bind-Value="newUser.City" class="form-control" />
    </div>
    <div>
        <label>State:</label>
        <InputText @bind-Value="newUser.State" class="form-control" />
    </div>
    <div>
        <label>Zip Code:</label>
        <InputText @bind-Value="newUser.ZipCode" class="form-control" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="newUser.Email" class="form-control" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="newUser.Password" class="form-control" />
    </div>
    <div>
        <label>Phone Number:</label>
        <InputText @bind-Value="newUser.PhoneNumber" class="form-control" />
    </div>
    <div>
        <label>Role:</label>
        <InputNumber @bind-Value="newUser.FkRole" class="form-control" />
    </div>

    <div>
        <h4>Children</h4>
        @foreach (var child in newUser.Children)
        {
            <div class="child-inputs">
                <label>First Name:</label>
                <InputText @bind-Value="child.FirstName" class="form-control" />
                <label>Middle Name:</label>
                <InputText @bind-Value="child.MiddleName" class="form-control" />
                <label>Last Name:</label>
                <InputText @bind-Value="child.LastName" class="form-control" />
                <label>Age:</label>
                <InputNumber @bind-Value="child.Age" class="form-control" />

                <button type="button" class="btn btn-danger" @onclick="() => RemoveChild(child)">-</button>
            </div>
        }
        <button type="button" class="btn btn-success" @onclick="AddChild">+ Add Child</button>
    </div>

    <br />
    <button type="submit" class="btn btn-primary">Create Profile</button>
</EditForm>

@code {
    [Parameter] public EventCallback OnUserCreated { get; set; }
    private UserView newUser = new UserView();

    private async Task SaveProfile()
    {
        try
        {
            var response = await CustomerInfoService.CreateUserAsync(newUser);

            if (response.IsSuccessStatusCode)
            {
                await OnUserCreated.InvokeAsync();
                newUser = new UserView();
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error creating profile: {response.ReasonPhrase}");
                Console.WriteLine(errorContent);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating profile: {ex.Message}");
        }
    }

    private void AddChild()
    {
        newUser.Children.Add(new ChildView());
    }

    private void RemoveChild(ChildView child)
    {
        newUser.Children.Remove(child);
    }
}

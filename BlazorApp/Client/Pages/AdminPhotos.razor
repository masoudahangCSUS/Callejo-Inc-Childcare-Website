@page "/adminphotos"
@inject HttpClient Http
@using System.Net.Http
@using System.Net.Http.Json
@using Common.View
@using System.Data.SqlClient
@using Microsoft.Data.SqlClient
@using System.Text.Json.Serialization;
@rendermode InteractiveServer
@inject IJSRuntime JS



<h3>Admin Photo Management</h3>

<EditForm Model="photoModel" OnValidSubmit="SubmitPhotoUrl">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="input-header">Image URL</div>
    <div class="input-wrapper">
        <InputText @bind-Value="photoModel.ImageUrl" placeholder="Enter image URL..." @oninput="ForceUpdate" />

    </div>

    <button type="submit">Submit Photo</button>

    <!-- Debugging Output -->
    <p>Current Input: @photoModel.ImageUrl</p>
</EditForm>

@if (errorMessage is not null)
{
    <p style="color:red">@errorMessage</p>
}

@if (photos.Any())
{
    <h4>Uploaded Images:</h4>
    <ul>
        @foreach (var photo in photos)
        {
            <li>
                <img src="@photo" alt="Uploaded Photo" width="100" />
                <p>@photo</p>
            </li>
        }
    </ul>
}
else
{
    <p>No images uploaded yet.</p>
}

@code {
    private PhotoModel photoModel = new();
    private List<string> photos = new();
    private string errorMessage = string.Empty;
   

    private void ForceUpdate(ChangeEventArgs e)
    {
        photoModel.ImageUrl = e.Value.ToString();
        Console.WriteLine($"DEBUG: Manual Input Binding = {photoModel.ImageUrl}");
        StateHasChanged();
    }


    private async Task SubmitPhotoUrl()
    {
        Console.WriteLine($"DEBUG: Before submit, ImageUrl = '{photoModel.ImageUrl}'");

        if (string.IsNullOrWhiteSpace(photoModel.ImageUrl))
        {
            errorMessage = "Image URL cannot be empty.";
            Console.WriteLine("DEBUG: Image URL is empty.");
            return;
        }

        try
        {
            Console.WriteLine($"DEBUG: Sending request to API with Image URL: {photoModel.ImageUrl}");

            var response = await Http.PostAsJsonAsync("https://localhost:7139/api/admin/upload-image", photoModel);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<APIResponse>();

                if (result?.Success == true)
                {
                    Console.WriteLine($"DEBUG: [SUCCESS] Image URL stored. Message: {result.Message}");
                    photos.Add(photoModel.ImageUrl);
                    photoModel.ImageUrl = ""; // Clear input field
                }
                else
                {
                    errorMessage = result?.Message ?? "Upload failed.";
                    Console.WriteLine($"DEBUG: [FAILURE] API returned success but failed. Message: {errorMessage}");
                }
            }
            else
            {
                errorMessage = $"API returned error: {response.StatusCode}";
                Console.WriteLine($"DEBUG: [ERROR] Non-200 status. Status = {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during upload.";
            Console.WriteLine($"DEBUG: [EXCEPTION] {ex.Message}");
        }
    }

    public class PhotoModel
    {
        public string ImageUrl { get; set; } = "";
    }
}

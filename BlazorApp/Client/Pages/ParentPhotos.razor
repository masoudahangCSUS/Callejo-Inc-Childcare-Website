@page "/Photos"
@using BlazorApp.Services
@inject HttpClient Http
@using Common.View;
@using BlazorApp.Server.Models
@using System.Text.Json.Serialization;
@using System.Net.Http.Json
@using System.Text.Json

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Callejo Inc. - Photo Gallery</title>
    <link rel="stylesheet" href="styles.css" />
</head>
<body>

    <!-- Purple header container (optional) -->
    <div class="purple-header-container">
        <h2>Welcome to Our Photo Gallery</h2>
        <p>Enjoy the latest snapshots of our daily activities at Callejo Inc.</p>
    </div>

    <!-- Teal container for photos -->
    <div class="child-enrollment-page">
        <h2>Daily Photos</h2>
        <p style="text-align:center; color:#fff;">
            Check out what the kids have been up to!
        </p>
        <div class="photo-grid">
            @if (imageUrls.Any())
            {
                @foreach (var url in imageUrls)
                {
                    <div class="photo-item">
                        <a href="@url" target="_blank">@url</a>
                        <img src="@url" alt="Photo" width="300" />
                    </div>
                }
            }
        </div>
    </div>

</body>
</html>
@code {
    private List<string> imageUrls = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            string apiUrl = "https://localhost:7139/api/admin/get-all-photos";

            var response = await Http.GetFromJsonAsync<APIResponse>(apiUrl);

            if (response != null && response.Success && response.Data != null)
            {
                Console.WriteLine($"DEBUG: Raw API Data: {response.Data}");

                imageUrls = JsonSerializer.Deserialize<List<string>>(JsonSerializer.Serialize(response.Data));

                foreach (var url in imageUrls)
                {
                    Console.WriteLine($"DEBUG: Final Image URL used - {url}");
                }
            }
            else
            {
                Console.WriteLine("No images found.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching images: {ex.Message}");
        }
    }

    private string GetGoogleDriveDirectUrl(string fileId)
    {
        return $"https://drive.google.com/thumbnail?id={fileId}&sz=w1000";
    }


}
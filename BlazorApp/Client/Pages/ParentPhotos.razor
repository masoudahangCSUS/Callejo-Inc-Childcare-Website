@page "/Photos"
@inject HttpClient Http
@using System.Net.Http.Json
@using System.Net.Http.Headers
@using System.Text.Json
@using System.Text.Json.Serialization;
@using System.Net.Http
@using Microsoft.AspNetCore.Authorization
@using Common.View
@attribute [Authorize(Roles = "User")]

<div class="purple-header-container">
    <h2>Welcome to Our Photo Gallery</h2>
    <p>Enjoy the latest snapshots of our daily activities at Callejo Inc.</p>
    <div class="photo-grid">
        @if (featuredPhotos.Any())
        {
            @foreach (var photo in featuredPhotos)
            {
                <div class="photo-item">
                    <img src="https://localhost:7139/images/photos/@photo.FileName" alt="Featured Photo" />
                </div>
            }
        }
        else
        {
            <p>No featured photos available.</p>
        }
    </div>
</div>

@code {
    private List<Image> featuredPhotos = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync("https://localhost:7139/api/photos/featured");
            var json = await response.Content.ReadAsStringAsync();

            Console.WriteLine("RAW JSON FROM API:");
            Console.WriteLine(json);

            if (response.IsSuccessStatusCode)
            {
                featuredPhotos = JsonSerializer.Deserialize<List<Image>>(json, new JsonSerializerOptions
                    {
                        PropertyNameCaseInsensitive = true
                    }) ?? new();
            }

            Console.WriteLine("Fetched Featured Photos:");
            foreach (var photo in featuredPhotos)
            {
                Console.WriteLine($"Photo: {photo.FileName}, Published: {photo.IsPublished}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching featured photos: {ex.Message}");
        }
    }

}

@page "/create-profile"
@inject IJSRuntime JS
@inject HttpClient Http
@inject NavigationManager Navigation
@inject CustomerInfoService CustomerInfoService
@rendermode InteractiveServer

@using Microsoft.AspNetCore.Components.Forms
@using Common.View


<h3>Create Profile</h3>

<EditForm Model="@newUser" OnSubmit="SaveProfile" FormName="CreateProfileForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>First Name:</label>
        <InputText @bind-Value="newUser.userFirstName" class="form-control" />
    </div>

    <div>
        <label>Middle Name:</label>
        <InputText @bind-Value="newUser.userMiddleName" class="form-control" />
    </div>

    <div>
        <label>Last Name:</label>
        <InputText @bind-Value="newUser.userLastName" class="form-control" />
    </div>

    <div>
        <label>Address:</label>
        <InputText @bind-Value="newUser.userAddress" class="form-control" />
    </div>

    <div>
        <label>City:</label>
        <InputText @bind-Value="newUser.userCity" class="form-control" />
    </div>

    <div>
        <label>State:</label>
        <InputText @bind-Value="newUser.userState" class="form-control" />
    </div>

    <div>
        <label>Zip Code:</label>
        <InputText @bind-Value="newUser.userZipCode" class="form-control" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="newUser.userEmail" class="form-control" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="newUser.userPassword" class="form-control" />
    </div>
    <div>
        <label>Phone Number:</label>
        <InputText @bind-Value="newUser.userPhoneNumber" class="form-control" />
    </div>
    <div>
        <label>Role:</label>
        <InputNumber @bind-Value="newUser.userFkRole" class="form-control" />
    </div>

    <br/>

    <button type="submit" class="btn btn-primary">Create Profile</button>
</EditForm>


@code {
    private UserView newUser = new UserView();

    private async Task SaveProfile()
    {
        try
        {
            var response = await CustomerInfoService.CreateUserAsync(newUser);

            if (response.IsSuccessStatusCode)
            {
                newUser = new UserView();
            }
            else{
                var errorContent = await response.Content.ReadAsStringAsync(); // Log response content
                Console.WriteLine($"Error creating profile: {response.ReasonPhrase}");
                Console.WriteLine(response);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating profile: {ex.Message}");
        }
    }
}
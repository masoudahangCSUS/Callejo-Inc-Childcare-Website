@page "/debugMA"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserSessionService user
@rendermode InteractiveServer


<h3>2FA Debug</h3>

<button class="btn btn-primary" @onclick="ShowQR">Show QR</button>
<button class="btn btn-secondary" @onclick="SendPush">Send push</button>

@if (!string.IsNullOrEmpty(qrCodeImage))
{
    <div class="mt-3">
        <img src="@qrCodeImage" alt="QR Code" />
    </div>
}

@code {
    private string qrCodeImage;
    private string userEmail;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        // Retrieve the email claim 
        userEmail = user.FindFirst(ClaimTypes.Email)?.Value;
    }

    private async Task ShowQR()
    {
        if (string.IsNullOrEmpty(userEmail))
        {
            Console.Error.WriteLine("Email claim not found.");
            return;
        }
        Guid userId = (Guid)user.UserId;


        // Construct the URL including the email query parameter.
        var apiUrl = $"https://localhost:7139/api/MA/QRGenerate/{userId}?email={Uri.EscapeDataString(userEmail)}";

        try
        {
            var response = await Http.GetAsync(apiUrl);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<QrCodeResponse>();
                if (result != null)
                {
                    qrCodeImage = result.QrCodeImage;
                }
            }
            else
            {
                Console.Error.WriteLine($"Error retrieving QR code: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Exception while retrieving QR code: {ex.Message}");
        }
    }

    private void SendPush()
    {
        // Add push notification logic here.
        Console.WriteLine("Send push clicked");
    }

    // Helper class to deserialize the API response.
    public class QrCodeResponse
    {
        public string QrCodeImage { get; set; }
    }

    
}


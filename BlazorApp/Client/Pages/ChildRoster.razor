@page "/admin-child-roster"
@inject HttpClient Http
@using Common.Models.Data
@using Common.View
@using Microsoft.AspNetCore.Authorization

@inject AdminService AdminService
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Admin")]

<div class="child-roster-container">
    <!-- Page Title -->
    <div class="child-roster-header">
        <h1>Child Roster</h1>
    </div>

    @if (children == null)
    {
        <p class="loading-text">Loading data...</p>
    }
    else if (!children.Any())
    {
        <p class="no-data-text">No children found.</p>
    }
    else
    {
        <ul class="child-list">
            @foreach (var child in children)
            {
                <li class="child-item">
                    <div class="child-photo-wrapper">
                        <img src="images/child-placeholder.png" alt="Child photo" class="child-photo" />
                    </div>
                    <div class="child-info">
                        <p><strong>First Name:</strong> @child.FirstName</p>
                        <p><strong>Middle Name:</strong> @(string.IsNullOrEmpty(@child.MiddleName) ? "N/A" : @child.MiddleName)</p>
                        <p><strong>Last Name:</strong> @child.LastName</p>
                        <p><strong>Age:</strong> @child.Age</p>
                    </div>
                </li>
            }
        </ul>
    }
</div>


@code {
    private List<ChildView> children = new List<ChildView>();

    protected override async Task OnInitializedAsync()
    {
        var apiUrl = "https://localhost:7139/api/Admin/children";

        // Deserialize the response as an object, then extract the children list
        var response = await Http.GetFromJsonAsync<ListChildren>(apiUrl);
        if (response != null && response.children != null)
        {
            children = response.children;
        }
    }
}



